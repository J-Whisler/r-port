{"version":3,"sources":["assets/JWhislerResume.pdf","me.jpg","assets/beer.png","assets/weather.jpg","assets/devgen.png","assets/password.png","assets/planner.png","assets/pp2.png","serviceWorker.js","nav.js","about.js","portfolio.js","contact.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Nav","className","Component","About","name","src","me","alt","href","resume","Portfolio","beer","weather","dev","pinchers","password","planner","Contact","Form","FormGroup","Input","type","id","placeholder","Button","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c107f83f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/JWhislerResume.23673770.pdf\";","module.exports = __webpack_public_path__ + \"static/media/me.0cd1046f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/beer.1a018f91.png\";","module.exports = __webpack_public_path__ + \"static/media/weather.392d94df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/devgen.2d1e267b.png\";","module.exports = __webpack_public_path__ + \"static/media/password.a3bb0cf3.png\";","module.exports = __webpack_public_path__ + \"static/media/planner.a93f1683.png\";","module.exports = __webpack_public_path__ + \"static/media/pp2.82e7802c.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './nav.css'\r\n\r\nclass Nav extends Component {\r\n    render () {\r\n        return (\r\n            <nav>\r\n                <h2 className=\"name\">Jacob Whisler</h2>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav","import React, { Component } from 'react'\r\nimport './about.css'\r\nimport me from './me.jpg'\r\nimport resume from '../src/assets/JWhislerResume.pdf'\r\n\r\nclass About extends Component {\r\n    render () {\r\n        return (\r\n            <body className=\"about-body\" name=\"About\">\r\n        <div className=\"heading\">\r\n          <h2 className=\"about\">About Me</h2>\r\n        </div>\r\n      \r\n        \r\n      \r\n        <div className=\"row about-div\">\r\n      \r\n          <div className=\"col-md\">\r\n            <img src={me} alt=\"Me\" className=\"my-img\"></img>\r\n          </div>\r\n      \r\n          <div className=\"col-md paragraph\">\r\n            <p className=\"paragraph\">My name is Jacob Whisler.  I am 26 years old.  I grew up in Ashland, Ohio where I gratuated from Ashland High School in 2012 and Ashland University in 2016.  I have been living in the Cleveland area since early 2017.</p>\r\n            <p className=\"paragraph\">I am currently enrolled in Case Western Reserve Coding Bootcamp and hope to get a job as a full time web-developer upon graduation in May of 2020</p>\r\n          </div>\r\n\r\n          \r\n        </div>\r\n            <div className=\"links\">\r\n        <button><a href=\"https://github.com/J-Whisler/\"></a>Github</button>\r\n        <button><a href={resume}></a>Resume</button>\r\n        </div>\r\n    </body>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React, { Component } from 'react'\r\n// import { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport './portfolio.css'\r\nimport beer from './assets/beer.png'\r\nimport weather from './assets/weather.jpg'\r\nimport dev from './assets/devgen.png'\r\nimport password from './assets/password.png'\r\nimport planner from './assets/planner.png'\r\nimport pinchers from './assets/pp2.png'\r\n\r\nclass Portfolio extends Component {\r\n    render () {\r\n        return (\r\n            <body className=\"portfolio-body\">\r\n              \r\n            <div className=\"card-container\">\r\n        \r\n            <div className=\"row\">\r\n              <div className=\"card col \">\r\n                <img src={beer} className=\"card-img-top image\" alt=\"Brewery Locator\"></img>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Brewery Locator</h5>\r\n                  <p className=\"card-text\">Find a brewery near you using your current location or seach a city and state to see what is available in the area.</p>\r\n                  <a href=\"https://j-whisler.github.io/Project-1/\" className=\"btn btn-primary\">Find a brewery!</a>\r\n                </div>\r\n              </div>\r\n      \r\n              <div className=\"card col\">\r\n                  <img src={weather} className=\"card-img-top image\" alt=\"...\"></img>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Weather</h5>\r\n                    <p className=\"card-text\">Get the weather of your city by ZIP CODE as well as a 5-day forecast, or search a different city's weather.</p>\r\n                    <a href=\"https://j-whisler.github.io/Weather-Dashboard2/\" className=\"btn btn-primary\">Get Weather!</a>\r\n                  </div>\r\n                </div>\r\n\r\n                 <div className=\"card col\">\r\n                <img src={dev} className=\"card-img-top image\" alt=\"...\"></img>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Developer Profile Generator</h5>\r\n                  <p className=\"card-text\">Generate a  developer profile!</p>\r\n                  <a href=\"https://j-whisler.github.io/dev-prof-gen/\" className=\"btn btn-primary\">Develope a profile!</a>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n              <div className=\"card col\">\r\n                <img src={pinchers} className=\"card-img-top image\" alt=\"...\"></img>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Penny Pinchers</h5>\r\n                  <p className=\"card-text\">Use this app to save money!</p>\r\n                  <a href=\"https://penny-pinchers-v2.herokuapp.com/\" className=\"btn btn-primary\">Save!</a>\r\n                </div>\r\n              </div>\r\n      \r\n              <div className=\"card col\">\r\n                  <img src={password} className=\"card-img-top image\" alt=\"...\"></img>\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Passwrod Generator</h5>\r\n                    <p className=\"card-text\">Use this app to generate a random password</p>\r\n                    <a href=\"https://j-whisler.github.io/pass-gen/\" className=\"btn btn-primary\">Generate!</a>\r\n                  </div>\r\n                </div> \r\n\r\n                 <div className=\"card col\">\r\n                <img src={planner} className=\"card-img-top image\" alt=\"...\"></img>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Day Planner</h5>\r\n                  <p className=\"card-text\">Plan your day!</p>\r\n                  <a href=\"https://j-whisler.github.io/Day-Planner/\" className=\"btn btn-primary\">Start Planning!</a>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n\r\n             \r\n            </div>\r\n            \r\n              </body>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio","import React, { Component } from 'react'\r\nimport { Button, Form, FormGroup,  Input } from 'reactstrap';\r\nimport './contact.css'\r\nimport resume from '../src/assets/JWhislerResume.pdf'\r\n\r\nclass Contact extends Component {\r\n    render () {\r\n        return (\r\n            <body name=\"contact\">\r\n              <div className=\"contact-me\">Contact Me</div>\r\n            <Form>\r\n      <FormGroup className=\"formgroup\">\r\n        <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"Enter your name\" />\r\n      </FormGroup>\r\n      <FormGroup className=\"formgroup\">\r\n        <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Enter your email\" />\r\n      </FormGroup>\r\n      <FormGroup className=\"formgroup\">\r\n        <Input type=\"textarea\" name=\"textarea\" id=\"textarea\" placeholder=\"Enter a message\"/>\r\n      </FormGroup>\r\n      <Button className=\"submit\">Submit</Button>\r\n    </Form>\r\n\r\n    <div className=\"links\">\r\n        <button><a className=\"link\" href=\"https://github.com/J-Whisler/\"></a>Github</button>\r\n        <button><a className=\"link\" href={resume}></a>Resume</button>\r\n        </div>\r\n    </body>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Nav from './nav';\r\nimport About from './about'\r\nimport Portfolio from './portfolio';\r\nimport Contact from './contact';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Nav />\r\n    <About />\r\n    <Portfolio />\r\n    \r\n    <Contact />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}